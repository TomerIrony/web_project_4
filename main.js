!function(){"use strict";var e={937:function(e,t,n){e.exports=n.p+"4e8e0a1d604782a0dff8.svg"},9:function(e,t,n){e.exports=n.p+"8667ac4a523e8fc42e59.svg"},742:function(e,t,n){e.exports=n.p+"d86bb2edc2f6eadb96b7.svg"}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var i=t[r]={exports:{}};return e[r](i,i.exports,n),i.exports}n.p="",function(){var e=n(937),t=n(9),r=n(742);function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var a=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),i(this,"_showInputError",(function(e,t){var n=r._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(c.inputErrorClass),n.textContent=t,n.classList.add(c.formValidationShow)})),i(this,"_hideInputError",(function(e){var t=r._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(c.inputErrorClass),t.classList.remove(c.formValidationActive),t.textContent=""})),i(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e,e.validationMessage)})),i(this,"_hasInvalidInput",(function(e){return e.some((function(e){return!e.validity.valid}))})),i(this,"_defaultButtonDisable",(function(e){e.classList.add(r._validationConfig.inactiveButtonClass),e.disabled=!0})),i(this,"_defaultButtonEnable",(function(e){e.classList.remove(r._validationConfig.inactiveButtonClass),e.disabled=!1})),i(this,"_toggleButtonState",(function(e,t){r._hasInvalidInput(e)?r._defaultButtonDisable(t):r._defaultButtonEnable(t)})),i(this,"_setEventListeners",(function(){var e=Array.from(r._formElement.querySelectorAll(r._validationConfig.inputSelector)),t=r._formElement.querySelector(r._validationConfig.submitButtonSelector);r._toggleButtonState(e,t),e.forEach((function(n){n.addEventListener("input",(function(){r._checkInputValidity(n),r._toggleButtonState(e,t)}))}))})),this._validationConfig=t,this._formElement=n,this._button=this._formElement.querySelector(this._validationConfig.submitButtonSelector)}var t,n;return t=e,(n=[{key:"resetValidation",value:function(){var e=this._validationConfig.inactiveButtonClass;this._button&&(this._button.classList.add(e),this._button.disabled=!0)}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&o(t.prototype,n),e}(),c={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit-btn",inactiveButtonClass:"form__submit-btn_disable",inputErrorClass:"form__text_error",errorClass:"popup__error_visible",formValidationShow:"form__validation_show",formValidationActive:"form__validation_show"};function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n,r,o){var i=o.imagePopupClick,a=o.cardLikeClick,c=o.cardDeleteCallBack;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._title=t.name,this._image=t.link,this._likes=t.likes,this._owner=t.owner._id,this._id=t._id,this._userId=r,this._template=n,this._imagePopupClick=i,this._cardLikeClick=a,this._cardDeleteCallBack=c}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return this._template.content.querySelector(".card").cloneNode(!0)}},{key:"_deleteButtons",value:function(){this._userId!==this._owner&&(this._element.querySelector(".card__close").style.display="none")}},{key:"likeCard",value:function(){this._element.querySelector(".card__like-btn").classList.add("card__like-active")}},{key:"removelike",value:function(){this._element.querySelector(".card__like-btn").classList.remove("card__like-active")}},{key:"_saveLike",value:function(){var e=this;this._likes.filter((function(t){return t._id===e._userId})).length>0&&this._element.querySelector(".card__like-btn").classList.add("card__like-active")}},{key:"likeCounter",value:function(e){this._element.querySelector(".card__like-numbers").textContent=e}},{key:"initalCounter",value:function(){this._element.querySelector(".card__like-numbers").textContent=this._likes.length}},{key:"likeHandle",value:function(e){this._element.querySelector(".card__like-numbers").textContent=e,this._element.querySelector(".card__like-btn").classList.contains("card__like-active")?this.removelike():this.likeCard()}},{key:"checkIfLikes",value:function(){return this._element.querySelector(".card__like-btn").classList.contains("card__like-active")}},{key:"deleteCard",value:function(){this._element.remove()}},{key:"generateCard",value:function(){var e=this;return this._element=this._getTemplate(),this._element.querySelector(".card__image").src=this._image,this._element.querySelector(".card__image").alt=this._image,this._element.querySelector(".card__name").textContent=this._title,this._deleteButtons(),this._saveLike(),this._element.querySelector(".card__close").addEventListener("click",(function(){e._cardDeleteCallBack(e._id)})),this._element.querySelector(".card__like-btn").addEventListener("click",(function(){e._cardLikeClick(e._id,e._element,e._likes,e._likeButton)})),this._element.querySelector(".card__image").addEventListener("click",(function(){e._imagePopupClick([e._title,e._image])})),this.likeCounter(),this.initalCounter(),this._element}}])&&l(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=document.querySelector(n)}var t,n;return t=e,(n=[{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderer",value:function(){var e=this;this._renderedItems.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}},{key:"prependItem",value:function(e){this._container.prepend(e)}}])&&s(t.prototype,n),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function p(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var h=function(){function e(t){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),p(this,"_handleEscClose",(function(e){"Escape"===e.key&&n.close()})),p(this,"_handleClose",(function(){n.close()})),p(this,"_handleCloseOnBackground",(function(e){e.target===e.currentTarget&&n.close(e.currentTarget)})),this._popup=t}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popout_opened"),this.setEventListeners()}},{key:"close",value:function(){this._popup.classList.remove("popout_opened"),this.removeEventListeners()}},{key:"removeEventListeners",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.querySelector(".popout__close-btn").removeEventListener("click",this._handleClose),this._popup.removeEventListener("click",this._handleCloseOnBackground)}},{key:"setEventListeners",value:function(){this._popup.querySelector(".popout__close-btn").addEventListener("click",this._handleClose),this._popup.addEventListener("click",this._handleCloseOnBackground),document.addEventListener("keydown",this._handleEscClose)}}])&&d(t.prototype,n),e}();function _(e){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function y(e,t,n){return y="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=k(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},y(e,t,n||e)}function v(e,t){return v=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},v(e,t)}function b(e,t){if(t&&("object"===_(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function k(e){return k=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},k(e)}var g=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&v(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=k(r);if(o){var n=k(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return b(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._src=t._popup.querySelector(".popout__image"),t._title=t._popup.querySelector(".popout__caption"),t}return t=a,(n=[{key:"open",value:function(e,t){y(k(a.prototype),"open",this).call(this),this._src.src=t,this._src.alt=e,this._title.textContent=e}}])&&m(t.prototype,n),a}(h);function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var C=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userName=t,this._userJob=n,this._avatar=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._userName.textContent,userJob:this._userJob.textContent,userAvatar:this._avatar.src}}},{key:"setUserInfo",value:function(e,t,n){this._userName.textContent=e,this._userJob.textContent=t,this._avatar.src=n}}])&&E(t.prototype,n),e}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function S(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function I(e,t,n){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=O(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},I(e,t,n||e)}function B(e,t){return B=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},B(e,t)}function L(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return P(e)}function P(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function O(e){return O=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},O(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&B(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=O(r);if(o){var n=O(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return L(this,e)});function a(e){var t,n,r,o,c=e.popup,l=e.formCallBack;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),o=function(e){return e.preventDefault(),t._formCallBack(t._getInputValues())},(r="formCallBack")in(n=P(t=i.call(this,c)))?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,t._formCallBack=l,t._form=t._popup.querySelector(".form"),t._inputs=t._popup.querySelectorAll(".form__input"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputFieldsValue={},this._inputs.forEach((function(t){e._inputFieldsValue[t.name]=t.value})),this._inputFieldsValue}},{key:"setEventListeners",value:function(){I(O(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",this.formCallBack)}},{key:"removeEventListeners",value:function(){I(O(a.prototype),"removeEventListeners",this).call(this),this._form.removeEventListener("submit",this.formCallBack)}},{key:"close",value:function(){I(O(a.prototype),"close",this).call(this),this._form.reset()}},{key:"handleDelete",value:function(e){this._formCallBack=e}}])&&S(t.prototype,n),a}(h);function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=new(function(){function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._url=n,this._headers=r}var t,n;return t=e,(n=[{key:"_checkResponse",value:function(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._url,"/cards"),{headers:this._headers}).then(this._checkResponse)}},{key:"loadUserInfo",value:function(){return fetch("".concat(this._url,"/users/me"),{headers:this._headers}).then(this._checkResponse)}},{key:"updateUserInfo",value:function(e,t){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._checkResponse)}},{key:"promiseAll",value:function(){return Promise.all([this.getInitialCards(),this.loadUserInfo()])}},{key:"addNewCard",value:function(e){var t=e.title,n=e.link;return fetch("".concat(this._url,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then(this._checkResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._url,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"updateProfilePicture",value:function(e){return fetch("".concat(this._url,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._checkResponse)}},{key:"likeCard",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._checkResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}},{key:"dislikeCard",value:function(e){return fetch("".concat(this._url,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._checkResponse)}}])&&j(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"9bdd55c3-52f9-457f-a17d-02b8ea63be13","Content-Type":"application/json"}}),x=function(e){var t=e.popup,n=e.loading,r=t.querySelector(".form__submit-btn");return n?void(r.textContent="Saving..."):void(r.textContent="Save")},T=document.querySelector("#imageOpened"),D=document.getElementById("openProfile"),N=document.getElementById("fullName"),U=document.getElementById("description"),V=document.getElementById("editProfileForm"),A=document.getElementById("userInputfullName"),J=document.getElementById("userInputDescription"),F=document.getElementById("addNewContentButton"),H=document.getElementById("popoutWindowNewPlace"),M=document.getElementById("popoutWindow"),W=(document.getElementById("cardNameInput"),document.getElementById("imageInput"),document.getElementById("newPlaceButton"),document.getElementById("saveInputProfileButton"),document.querySelector("#card-template")),z=document.querySelector(".profile__image"),$=(document.querySelector(".elements"),document.getElementById("imageUpdatePopup")),G=(document.getElementById("profileImageInput"),document.getElementById("imagePen"),document.getElementById("deleteImagePopup"));function K(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}document.querySelector(".card__like-numbers"),document.getElementById("logo").src=e,document.getElementById("pen").src=t,document.getElementById("profilePen").src=t,document.getElementById("plusSign").src=r;var Q=new g(T),X=new a(c,V),Y=new a(c,H),Z=new a(c,$);z.addEventListener("mouseover",(function(){document.querySelector(".profile__image-pen").style.visibility="visible"})),z.addEventListener("mouseout",(function(){document.querySelector(".profile__image-pen").style.visibility="hidden"})),document.querySelector(".profile__image-pen").addEventListener("mouseover",(function(){document.querySelector(".profile__image-pen").style.visibility="visible"})),X.enableValidation(),Y.enableValidation(),Z.enableValidation(),R.promiseAll().then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return K(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?K(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1],a=new q({popup:G}),c=function(e){var t=new u(e,W,i._id,{imagePopupClick:function(e){Q.open(e[0],e[1])},cardLikeClick:function(e,n,r){t.checkIfLikes()?R.removeLike(e).then((function(e){t.likeHandle(e.likes.length)})).catch((function(e){console.log(e)})):R.likeCard(e).then((function(e){t.likeHandle(e.likes.length)})).catch((function(e){console.log(e)}))},cardDeleteCallBack:function(e){a.open(),a.handleDelete((function(){R.deleteCard(e).then((function(){a.close(),t.deleteCard()})).catch((function(e){console.log(e)}))}))}});return t},l=new f({items:o,renderer:function(e){l.addItem(c(e).generateCard())}},".elements");l.renderer();var s=new q({popup:M,formCallBack:function(e){x({popup:M,loading:!0}),R.updateUserInfo(e["Full Name"],e.Description).then((function(){var t=d.getUserInfo();d.setUserInfo(e["Full Name"],e.Description,t.userAvatar)})).then((function(){s.close()})).finally((function(){x({popup:M,loading:!1})})).catch((function(e){console.log(e)}))}});D.addEventListener("click",(function(){var e=d.getUserInfo();A.value=e.userName,J.value=e.userJob,X.resetValidation(),s.open()}));var d=new C(N,U,z);d.setUserInfo(i.name,i.about,i.avatar);var p=new q({popup:$,formCallBack:function(e){x({popup:$,loading:!0}),R.updateProfilePicture(e["Profile Image Url"]).then((function(){var t=d.getUserInfo();d.setUserInfo(t.userName,t.userJob,e["Profile Image Url"])})).then((function(){p.close()})).finally((function(){x({popup:$,loading:!1})})).catch((function(e){console.log(e)}))}});document.querySelector(".profile__image").addEventListener("click",(function(){p.open()})),document.querySelector(".profile__image-pen").addEventListener("click",(function(){Z.resetValidation(),p.open()}));var h=new q({popup:H,formCallBack:function(e){R.addNewCard(e).then((function(e){l.prependItem(c(e).generateCard())})).then((function(){h.close()})).catch((function(e){console.log(e)}))}});F.addEventListener("click",(function(){Y.resetValidation(),h.open()}))}))}()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,